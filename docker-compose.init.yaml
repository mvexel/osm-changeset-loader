services:
  db:
    image: ghcr.io/baosystems/postgis:17-3.5
    container_name: osm_mappers_db
    restart: always
    environment:
      POSTGRES_USER: osm_user
      POSTGRES_PASSWORD: osm_pass
      POSTGRES_DB: osm_db
    volumes:
      - /tmp/postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U osm_user -d osm_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Initial database setup
  init:
    build: .
    container_name: osm_mappers_init
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: osm_user
      POSTGRES_PASSWORD: osm_pass
      POSTGRES_DB: osm_db
      DATABASE_URL: postgresql://osm_user:osm_pass@db:5432/osm_db
    command: /app/scripts/init_phase.sh

  # Migration container using Alembic to upgrade schema
  migrate:
    build: .
    container_name: osm_mappers_migrate
    depends_on:
      init:
        condition: service_completed_successfully
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: osm_user
      POSTGRES_PASSWORD: osm_pass
      POSTGRES_DB: osm_db
    command: alembic upgrade head

  # Archive loader service
  loader:
    build: .
    container_name: osm_mappers_archive_loader
    depends_on:
      migrate:
        condition: service_completed_successfully
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: osm_user
      POSTGRES_PASSWORD: osm_pass
      POSTGRES_DB: osm_db
    volumes:
      - ${OSM_FILE_PATH:-./example/814.osm}:/data/osm_file.osm
    command: /bin/sh -c '${TRUNCATE_TABLES:+python /app/scripts/truncate_tables.py &&} python /app/scripts/archive_loader.py /data/osm_file.osm ${LOADER_ARGS:-}'
